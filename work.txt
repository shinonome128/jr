# コード

library(data.table)
library(dplyr)
library(stringr)



# 金沢、富山の気象データを抽出

weather.data.kanazawa <- weather.data %>%
    filter(weather.data$地点 == "金沢")

weather.data.toyama <- weather.data %>%
    filter(weather.data$地点 == "富山")


# 金沢、富山の気象データのうち、訓練データを抽出

weather.data.kanazawa.2016 <- as.data.table(weather.data.kanazawa) %>%
    filter(
        str_detect(年月日時, "2016")
    )

weather.data.toyama.2016 <- as.data.table(weather.data.toyama) %>%
    filter(
        str_detect(年月日時, "2016")
    )


# 列名を修正

colnames(weather.data.kanazawa.2016) <-
c("date", "location", "tempareture(℃)", "precipitation(mm)", "snowfall(cm)", "snow(cm)", "sunshineTime(h)", "windSpeed(m/s)", "windDirection", "amountOfIsolation(MJ/㎡)", "localAtomosphericPressur(hPa)", "seeLevelPressur(hPa)", "relativeHumidity(％)", "VaporPressur(hPa)", "cloudVlume(10minThan)", "dewPointTempareture(℃)", "weather", "visiblity(km)")

colnames(weather.data.toyama.2016) <-
c("date", "location", "tempareture(℃)", "precipitation(mm)", "snowfall(cm)", "snow(cm)", "sunshineTime(h)", "windSpeed(m/s)", "windDirection", "amountOfIsolation(MJ/㎡)", "localAtomosphericPressur(hPa)", "seeLevelPressur(hPa)", "relativeHumidity(％)", "VaporPressur(hPa)", "cloudVlume(10minThan)", "dewPointTempareture(℃)", "weather", "visiblity(km)")


# 時刻を修正

weather.data.kanazawa.2016$date <- as.POSIXlt(weather.data.kanazawa.2016$date)

weather.data.toyama.2016$date <- as.POSIXlt(weather.data.toyama.2016$date)


# 気象データからロケーション列を抜く

weather.data.kanazawa.2016 <- weather.data.kanazawa.2016[, c(1, 3:16)]

weather.data.toyama.2016 <- weather.data.toyama.2016[, c(1, 3:16)]


# 金沢、富山の気象データは列名がかぶるので、列名を変更する

colnames(weather.data.kanazawa.2016) <-
c("kanazawaTimeWeather", "k_tempareture(℃)", "k_precipitation(mm)", "k_snowfall(cm)", "k_snow(cm)", "k_sunshineTime(h)", "k_windSpeed(m/s)", "k_windDirection", "k_amountOfIsolation(MJ/㎡)", "k_localAtomosphericPressur(hPa)", "k_seeLevelPressur(hPa)", "k_relativeHumidity(％)", "k_VaporPressur(hPa)", "k_cloudVlume(10minThan)", "k_dewPointTempareture(℃)")

colnames(weather.data.toyama.2016) <-
c("toyamaTimeWeather", "t_tempareture(℃)", "t_precipitation(mm)", "t_snowfall(cm)", "t_snow(cm)", "t_sunshineTime(h)", "t_windSpeed(m/s)", "t_windDirection", "t_amountOfIsolation(MJ/㎡)", "t_localAtomosphericPressur(hPa)", "t_seeLevelPressur(hPa)", "t_relativeHumidity(％)", "t_VaporPressur(hPa)", "t_cloudVlume(10minThan)", "t_dewPointTempareture(℃)")


# 金沢発、富山着の時刻を気象データにそろえるため、ダイヤ時刻を四捨五入して、気象データとそろえる

train.weather <- train.master

train.weather$kanazawaTimeWeather <- round(train.weather$kanazawaTime, "hours")

train.weather$toyamaTimeWeather <- round(train.weather$toyamaTime, "hours")


# 車両データに気象データをマージする

train.weather.kanazawa <- 
merge(train.weather, weather.data.kanazawa.2016, by = "kanazawaTimeWeather", all.x = T)

train.weather.kanazawa.toyama <- 
merge(train.weather.kanazawa, weather.data.toyama.2016, by = "toyamaTimeWeather", all.x = T)


# 不要列の削除と整理

train.weather.kanazawa.toyama <-
train.weather.kanazawa.toyama[, c(3:7, 2, 8:21, 1, 22:35)]


# 車両、気象のマスターデータ作成

train.weather.master <- train.weather.kanazawa.toyama


#####################################

# 気象データ処理

着雪量データ
学習期間：2016/1/19～2016/12/31
予測期間：2017/1/1～2017/3/31


金沢、富山、糸魚川の3地点
2015/12/1～2016/3/31
2016/12/1～2017/3/31


# 方針
糸魚川は捨てる

訓練データ
2016/1/19-2016/12/31 金沢、富山の気象データを抽出

テストデータ
2017/1/1-2017/3/31 金沢、富山の気象データを抽出






# 金沢、富山の気象データを抽出

weather.data.kanazawa <- weather.data %>%
    filter(weather.data$地点 == "金沢")

weather.data.toyama <- weather.data %>%
    filter(weather.data$地点 == "富山")


# 金沢、富山の気象データのうち、訓練データを抽出

library(stringr)

weather.data.kanazawa.2016 <- as.data.table(weather.data.kanazawa) %>%
    filter(
        str_detect(年月日時, "2016")
    )


weather.data.toyama.2016 <- as.data.table(weather.data.toyama) %>%
    filter(
        str_detect(年月日時, "2016")
    )

# train.masterと気象データの結合方法検討

キーとなる列を作って合体させる
何をキーとするか

日付と時間の場合
train.master
toyama年月日	kanazawaTime
2016-01-19	10:56

weather.data.kanazawa.2016
年月日時
2016/1/19 11:00


車両？
train.master
toyama列車番号
560E

weather.data.kanazawa.2016
ダイヤに紐づいた時間

時間の方が処理が楽そうなので、train.masterとweather.data.kanazawa.2016の時間が同じになるように処理
時間のフィールドでデータを結合する

# train.masterの不要列の削除


## 参照元
https://qiita.com/dokokano_panda/items/4e40deece0b169bc979a


## 動作
データオブジェクトの後ろに括弧[]をつけてc()で必要な列を順番に指定

```
データ[, c(列番号, 列番号, 列番号)
```



## 例
列を入れ替えたデータフレームを作成

```
# 元データを確認
> hoge[1,]
  toyama列車番号 toyama年月日 toyama停車駅名 toyamaフェンダー部分(東京方向) toyama台車部分 toyamaフェンダー部分(金沢方向)
1           560E   2016-01-19           富山                              0              0                    0.002985924
   toyama合計 kanazawaTime toyamaTime
1 0.002985924        10:56      11:19
> 
# 列名と番号を確認
> colnames(hoge)
[1] "toyama列車番号"                 "toyama年月日"                   "toyama停車駅名"                
[4] "toyamaフェンダー部分(東京方向)" "toyama台車部分"                 "toyamaフェンダー部分(金沢方向)"
> 
# 入れ替えた時のデータを1行だけ表示
> hoge[1, c(2, 8, 9, 1, 7)]
  toyama年月日 kanazawaTime toyamaTime toyama列車番号  toyama合計
1   2016-01-19        10:56      11:19           560E 0.002985924
> 
# 列を入れ替えたデータを作成
> hoge2 <- hoge[, c(2, 8, 9, 1, 7)]
> 
# 作成データを確認
> head(hoge2)
  toyama年月日 kanazawaTime toyamaTime toyama列車番号  toyama合計
1   2016-01-19        10:56      11:19           560E 0.002985924
2   2016-01-19        11:56      12:19           562E 0.000000000
3   2016-01-19        12:56      13:19           564E 0.000949196
4   2016-01-19        13:46      14:06          8528E 0.002207584
5   2016-01-19        13:56      14:19           566E 0.000328679
6   2016-01-19        14:50      15:13           568E 0.000397536
> 
```

以上


# train.masterの時刻操作

問題点
時刻列がcharactor型なので時系列でソートされていない

18 2016-01-19 3518E        21:00      21:20 0.001367888
19 2016-01-19  590E        21:35      21:58 0.001346470
20 2016-01-19 3500E         6:00       6:19 0.000000000

対策
正しいデータ型を使う

## 参照元
https://www.google.co.jp/search?q=r+%E3%83%87%E3%83%BC%E3%82%BF%E5%9E%8B%E3%80%80%E6%97%A5%E4%BB%98&gws_rd=cr&dcr=0&ei=hy9xWvi0FIOK8gW64aiIAQ
http://cse.naro.affrc.go.jp/takezawa/r-tips/r/16.html

## 動作例
date列がcharacter型なので数値の日付型に変更する
```
# 元データを確認、date列がcharacter型
> summary(hoge)
     date              train            kanazawaTime    toyamaTime        snow          
 Length:10092       Length:10092       10:56  : 348   10:05  : 348   Min.   :0.000e+00  
 Class :character   Class :character   11:56  : 348   11:19  : 348   1st Qu.:0.000e+00  
 Mode  :character   Mode  :character   12:56  : 348   12:19  : 348   Median :0.000e+00  
                                       13:46  : 348   13:19  : 348   Mean   :4.408e-05  
                                       13:56  : 348   14:06  : 348   3rd Qu.:0.000e+00  
                                       14:50  : 348   14:19  : 348   Max.   :4.942e-02  
                                       (Other):8004   (Other):8004                      
> 
# 元データを表示、date列は見た目は日付を表しているが文字列扱い
> head(hoge)
        date train kanazawaTime toyamaTime        snow
1 2016-01-19  560E        10:56      11:19 0.002985924
2 2016-01-19  562E        11:56      12:19 0.000000000
3 2016-01-19  564E        12:56      13:19 0.000949196
4 2016-01-19 8528E        13:46      14:06 0.002207584
5 2016-01-19  566E        13:56      14:19 0.000328679
6 2016-01-19  568E        14:50      15:13 0.000397536
> 
# date列をData型に変更
> hoge$date <- as.Date(hoge$date)
> 
# 変更後は数値データとして処理されているのがわかる
> summary(hoge)
      date               train            kanazawaTime    toyamaTime        snow          
 Min.   :2016-01-19   Length:10092       10:56  : 348   10:05  : 348   Min.   :0.000e+00  
 1st Qu.:2016-04-14   Class :character   11:56  : 348   11:19  : 348   1st Qu.:0.000e+00  
 Median :2016-07-10   Mode  :character   12:56  : 348   12:19  : 348   Median :0.000e+00  
 Mean   :2016-07-10                      13:46  : 348   13:19  : 348   Mean   :4.408e-05  
 3rd Qu.:2016-10-05                      13:56  : 348   14:06  : 348   3rd Qu.:0.000e+00  
 Max.   :2016-12-31                      14:50  : 348   14:19  : 348   Max.   :4.942e-02  
                                         (Other):8004   (Other):8004                      
>
# 変更後も表示は変わっていない
> head(hoge)
        date train kanazawaTime toyamaTime        snow
1 2016-01-19  560E        10:56      11:19 0.002985924
2 2016-01-19  562E        11:56      12:19 0.000000000
3 2016-01-19  564E        12:56      13:19 0.000949196
4 2016-01-19 8528E        13:46      14:06 0.002207584
5 2016-01-19  566E        13:56      14:19 0.000328679
6 2016-01-19  568E        14:50      15:13 0.000397536
> 
```

以上

# データ内の文字列を結合する

## 参照元
http://www.okadajp.org/RWiki/?%E6%97%A5%E4%BB%98%E3%80%81%E6%99%82%E9%96%93%E9%96%A2%E6%95%B0Tips%E5%A4%A7%E5%85%A8


## 動作
列と列のデータを結合して、新しい列に追加する

```
データ$新しい列 <- paste(データ$列, データ$列)
```

## 例
日付列と時刻列を結合

```
# 元データを表示
> head(hoge)
        date train kanazawaTime toyamaTime        snow
1 2016-01-19  560E        10:56      11:19 0.002985924
2 2016-01-19  562E        11:56      12:19 0.000000000
3 2016-01-19  564E        12:56      13:19 0.000949196
4 2016-01-19 8528E        13:46      14:06 0.002207584
5 2016-01-19  566E        13:56      14:19 0.000328679
6 2016-01-19  568E        14:50      15:13 0.000397536
> 
> 
# new列を作って、そこにdate列とkanazawaTime列を入れる
> hoge$new <- paste(hoge$date, hoge$kanazawaTime)
> 
> 
# 列newに結合データがある、でも文字列
> head(hoge)
        date train kanazawaTime toyamaTime        snow              new
1 2016-01-19  560E        10:56      11:19 0.002985924 2016-01-19 10:56
2 2016-01-19  562E        11:56      12:19 0.000000000 2016-01-19 11:56
3 2016-01-19  564E        12:56      13:19 0.000949196 2016-01-19 12:56
4 2016-01-19 8528E        13:46      14:06 0.002207584 2016-01-19 13:46
5 2016-01-19  566E        13:56      14:19 0.000328679 2016-01-19 13:56
6 2016-01-19  568E        14:50      15:13 0.000397536 2016-01-19 14:50
> 
```

以上


# train.masterの時刻データを正しくする

as.POSIXlt(データ)で変換すると日付データがすべて同じになってしまう


## 参照元
http://www.okadajp.org/RWiki/?%E6%97%A5%E4%BB%98%E3%80%81%E6%99%82%E9%96%93%E9%96%A2%E6%95%B0Tips%E5%A4%A7%E5%85%A8


## 動作
時刻データに変換
データはyyyy-mm-dd HH:MM:SS形式のcharacter型でいれる
```
as.POSIXlt(データ)
```

足りない場合は自動補完されるけど弊害が多い
例)yyyy-mm-ddが無いと、全部今日の日付が入る・・・


## 例
時刻列が文字データ、数値処理したいので、数値の時刻データにする

```
# 元データを表示
> head(hoge)
        date train kanazawaTime toyamaTime        snow
1 2016-01-19  560E        10:56      11:19 0.002985924
2 2016-01-19  562E        11:56      12:19 0.000000000
3 2016-01-19  564E        12:56      13:19 0.000949196
4 2016-01-19 8528E        13:46      14:06 0.002207584
5 2016-01-19  566E        13:56      14:19 0.000328679
6 2016-01-19  568E        14:50      15:13 0.000397536
> 
# kanazawaTime列は因子型データ
> summary(hoge)
      date               train            kanazawaTime    toyamaTime        snow          
 Min.   :2016-01-19   Length:10092       10:56  : 348   10:05  : 348   Min.   :0.000e+00  
 1st Qu.:2016-04-14   Class :character   11:56  : 348   11:19  : 348   1st Qu.:0.000e+00  
 Median :2016-07-10   Mode  :character   12:56  : 348   12:19  : 348   Median :0.000e+00  
 Mean   :2016-07-10                      13:46  : 348   13:19  : 348   Mean   :4.408e-05  
 3rd Qu.:2016-10-05                      13:56  : 348   14:06  : 348   3rd Qu.:0.000e+00  
 Max.   :2016-12-31                      14:50  : 348   14:19  : 348   Max.   :4.942e-02  
                                         (Other):8004   (Other):8004                      
> 
# date列とkanazawaTime列を結合して時刻データとして上書き
> hoge$kanazawaTime <- as.POSIXlt(
+     paste(hoge$date, hoge$kanazawaTime)
+ )
> 
# 処理後、kanazawaTime列が時刻データとして扱われている
> summary(hoge)
      date               train            kanazawaTime                   toyamaTime        snow          
 Min.   :2016-01-19   Length:10092       Min.   :2016-01-19 06:00:00   10:05  : 348   Min.   :0.000e+00  
 1st Qu.:2016-04-14   Class :character   1st Qu.:2016-04-15 03:53:45   11:19  : 348   1st Qu.:0.000e+00  
 Median :2016-07-10   Mode  :character   Median :2016-07-11 01:47:30   12:19  : 348   Median :0.000e+00  
 Mean   :2016-07-10                      Mean   :2016-07-11 01:37:14   13:19  : 348   Mean   :4.408e-05  
 3rd Qu.:2016-10-05                      3rd Qu.:2016-10-05 23:41:15   14:06  : 348   3rd Qu.:0.000e+00  
 Max.   :2016-12-31                      Max.   :2016-12-31 21:35:00   14:19  : 348   Max.   :4.942e-02  
                                                                       (Other):8004                      
> 
# 処理後のデータ内容
> head(hoge)
        date train        kanazawaTime toyamaTime        snow
1 2016-01-19  560E 2016-01-19 10:56:00      11:19 0.002985924
2 2016-01-19  562E 2016-01-19 11:56:00      12:19 0.000000000
3 2016-01-19  564E 2016-01-19 12:56:00      13:19 0.000949196
4 2016-01-19 8528E 2016-01-19 13:46:00      14:06 0.002207584
5 2016-01-19  566E 2016-01-19 13:56:00      14:19 0.000328679
6 2016-01-19  568E 2016-01-19 14:50:00      15:13 0.000397536
> 
```

以上




# 列名を修正

> colnames(weather.data)
 [1] "年月日時"       "地点"           "気温(℃)"       "降水量(mm)"     "降雪(cm)"       "積雪(cm)"       "日照時間(時間)"
 [8] "風速(m/s)"      "風向"           "日射量(MJ/㎡)"  "現地気圧(hPa)"  "海面気圧(hPa)"  "相対湿度(％)"   "蒸気圧(hPa)"   
[15] "雲量(10分比)"   "露点温度(℃)"   "天気"           "視程(km)"      
> 

c("年月日時", "地点", "気温(℃)", "降水量(mm)", "降雪(cm)", "積雪(cm)", "日照時間(時間)", "風速(m/s)", "風向", "日射量(MJ/㎡)", "現地気圧(hPa)", "海面気圧(hPa)", "相対湿度(％)", "蒸気圧(hPa)", "雲量(10分比)", "露点温度(℃)", "天気", "視程(km)")




# train.masterでkanazawaTimeの発射時刻を時間単位にする


> head(hoge1)
        date train        kanazawaTime          toyamaTime snow
1 2016-01-19 3500E 2016-01-19 06:00:00 2016-01-19 06:19:00    0
2 2016-01-19  552E 2016-01-19 06:13:00 2016-01-19 06:37:00    0
3 2016-01-19 3502E 2016-01-19 07:00:00 2016-01-19 07:19:00    0
4 2016-01-19 9536E 2016-01-19 07:08:00 2016-01-19 07:32:00    0
5 2016-01-19  554E 2016-01-19 07:23:00 2016-01-19 07:47:00    0
6 2016-01-19 3504E 2016-01-19 07:48:00 2016-01-19 08:07:00    0
> 

## 参照
https://qiita.com/tktz/items/733c37b1d6102ae52120


## 動作
データの時刻を時間で丸める

```
round(データ, "hours")
```

## 動作例
kanazawaTime列の時刻の分表示が細かいので丸める
例えば、6時13分00秒は6時に、7時48分00秒は8時にしたい

```
# 元データを表示
> head(hoge1)
        date train        kanazawaTime          toyamaTime snow
1 2016-01-19 3500E 2016-01-19 06:00:00 2016-01-19 06:19:00    0
2 2016-01-19  552E 2016-01-19 06:13:00 2016-01-19 06:37:00    0
3 2016-01-19 3502E 2016-01-19 07:00:00 2016-01-19 07:19:00    0
4 2016-01-19 9536E 2016-01-19 07:08:00 2016-01-19 07:32:00    0
5 2016-01-19  554E 2016-01-19 07:23:00 2016-01-19 07:47:00    0
6 2016-01-19 3504E 2016-01-19 07:48:00 2016-01-19 08:07:00    0
>
# 新しい列を作って、そこに時間で丸めた時刻を挿入
> hoge1$kanazawaTimeWeather <- round(hoge1$kanazawaTime, "hours")
> 
# 処理結果を表示、kanazawaTimeWeather列に時間で丸まった時刻が挿入されていることが分かる
> head(hoge1)
        date train        kanazawaTime          toyamaTime snow kanazawaTimeWeather
1 2016-01-19 3500E 2016-01-19 06:00:00 2016-01-19 06:19:00    0 2016-01-19 06:00:00
2 2016-01-19  552E 2016-01-19 06:13:00 2016-01-19 06:37:00    0 2016-01-19 06:00:00
3 2016-01-19 3502E 2016-01-19 07:00:00 2016-01-19 07:19:00    0 2016-01-19 07:00:00
4 2016-01-19 9536E 2016-01-19 07:08:00 2016-01-19 07:32:00    0 2016-01-19 07:00:00
5 2016-01-19  554E 2016-01-19 07:23:00 2016-01-19 07:47:00    0 2016-01-19 07:00:00
6 2016-01-19 3504E 2016-01-19 07:48:00 2016-01-19 08:07:00    0 2016-01-19 08:00:00
> 
```

以上


# 金沢発、富山着の時刻を気象データにそろえるため、共通列を作る

train.weather <- train.master

train.weather$kanazawaTimeWeather <- round(train.weather$kanazawaTime, "hours")

train.weather$toyamaTimeWeather <- round(train.weather$toyamaTime, "hours")



# 気象データからロケーション列を抜く

weather.data.kanazawa.2016 <- weather.data.kanazawa.2016[, c(1, 3:16)]

weather.data.toyama.2016 <- weather.data.toyama.2016[, c(1, 3:16)]


# 金沢、富山の気象データは列名がかぶるので、列名を変更する

colnames(weather.data.kanazawa.2016) <-
c("kanazawaTimeWeather", "k_tempareture(℃)", "k_precipitation(mm)", "k_snowfall(cm)", "k_snow(cm)", "k_sunshineTime(h)", "k_windSpeed(m/s)", "k_windDirection", "k_amountOfIsolation(MJ/㎡)", "k_localAtomosphericPressur(hPa)", "k_seeLevelPressur(hPa)", "k_relativeHumidity(％)", "k_VaporPressur(hPa)", "k_cloudVlume(10minThan)", "k_dewPointTempareture(℃)")

colnames(weather.data.toyama.2016) <-
c("toyamaTimeWeather", "t_tempareture(℃)", "t_precipitation(mm)", "t_snowfall(cm)", "t_snow(cm)", "t_sunshineTime(h)", "t_windSpeed(m/s)", "t_windDirection", "t_amountOfIsolation(MJ/㎡)", "t_localAtomosphericPressur(hPa)", "t_seeLevelPressur(hPa)", "t_relativeHumidity(％)", "t_VaporPressur(hPa)", "t_cloudVlume(10minThan)", "t_dewPointTempareture(℃)")




# 車両データに気象データをマージする


hoge4 <- merge(hoge1, hoge2, by = "kanazawaTimeWeather", all.x = T)
hoge5 <- merge(hoge4, hoge3, by = "toyamaTimeWeather", all.x = T)



train.weather.kanazawa <- 
merge(train.weather, weather.data.kanazawa.2016, by = "kanazawaTimeWeather", all.x = T)


train.weather.kanazawa.toyama <- 
merge(train.weather.kanazawa, weather.data.toyama.2016, by = "toyamaTimeWeather", all.x = T)


train.weather
weather.data.kanazawa.2016
weather.data.toyama.2016


train.weather.kanazawa <-
    merge(train.weather, weather.data.kanazawa.2016, by = "kanazawaTimeWeather", all.x = T)

train.weather.kanazawa.toyama <-
    merge(train.weather.kanazawa, weather.data.toyama.2016, by = "toyamaTimeWeather", all.x = T)


# 不要列の削除と整理

train.weather.kanazawa.toyama


> colnames(hoge)
 [1] "toyamaTimeWeather"               "kanazawaTimeWeather"             "date"                           
 [4] "train"                           "kanazawaTime"                    "toyamaTime"                     
 [7] "snow"                            "k_tempareture(℃)"               "k_precipitation(mm)"            
[10] "k_snowfall(cm)"                  "k_snow(cm)"                      "k_sunshineTime(h)"              
[13] "k_windSpeed(m/s)"                "k_windDirection"                 "k_amountOfIsolation(MJ/㎡)"     
[16] "k_localAtomosphericPressur(hPa)" "k_seeLevelPressur(hPa)"          "k_relativeHumidity(％)"         
[19] "k_VaporPressur(hPa)"             "k_cloudVlume(10minThan)"         "k_dewPointTempareture(℃)"      
[22] "t_tempareture(℃)"               "t_precipitation(mm)"             "t_snowfall(cm)"                 
[25] "t_snow(cm)"                      "t_sunshineTime(h)"               "t_windSpeed(m/s)"               
[28] "t_windDirection"                 "t_amountOfIsolation(MJ/㎡)"      "t_localAtomosphericPressur(hPa)"
[31] "t_seeLevelPressur(hPa)"          "t_relativeHumidity(％)"          "t_VaporPressur(hPa)"            
[34] "t_cloudVlume(10minThan)"         "t_dewPointTempareture(℃)"      
> 

c(3:7, 2, 8:21, 1, 22:35)

> hoge[, c(3:7, 2, 8:21, 1, 22:35)] %>% head()
hoge <- hoge[, c(3:7, 2, 8:21, 1, 22:35)]


train.weather.kanazawa.toyama <-
train.weather.kanazawa.toyama[, c(3:7, 2, 8:21, 1, 22:35)]


# 車両、気象のマスターデータ作成

train.weather.master <- train.weather.kanazawa.toyama








